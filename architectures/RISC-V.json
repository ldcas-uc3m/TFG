{
    "name": "RISC-V",
    "memory": {
        "text": {
            "start_addr": "0x00000000"
        },
        "data": {
            "start_addr": "0x00000100",
            "end_addr": "0xFFFFFFFF"
        }
    },
    "registers": [
        "zero",
        "ra",
        "sp",
        "gp",
        "t0", "t1", "t2", "t3", "t4", "t5", "t6",
        "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7",
        "s0", "s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11"
    ],
    "syscalls": {
        "1": "print_int",
        "11": "print_char",
        "5": "read_int",
        "12": "read_char",
        "10": "exit"
    },
    "instruction_set": {
        "addi": {
            "args": [ "$ra", "$rb", "$x" ],
            "def": "(reg! $ra (+ (reg $rb) $x))"
        },
        "bge": {
            "args": [ "$ra", "$rb", "$addr" ],
            "def": "(if (>= (reg $ra) (reg $rb)) (pc! $addr) ())"
        },
        "beq": {
            "args": [ "$ra", "$rb", "$addr" ],
            "def": "(if (== (reg $ra) (reg $rb)) (pc! $addr) ())"
        },
        "li": {
            "args": [ "$reg", "$x" ],
            "def": "(reg! $reg $x))"
        },
        "ecall": {
            "args": [ ],
            "def": "(if (== 1 (reg a7)) (call (reg a7) (reg a0)) (if (== 11 (reg a7)) (call (reg a7) (reg a0)) (if (== 5 (reg a7)) (call (reg a7) a0) (if (== 12 (reg a7)) (call (reg a7) a0) (if (== 10 (reg a7)) (call (reg a7)) ) ) ) ) )"
        }
    },
    "data_types": {
        "str": ".string",
        "word": ".word",
        "none": ".zero"
    },
    "comment_char": "#"
}